#include <avr/interrupt.h>

const int sensorPin = 7;       // Ultrasonic sensor
const int tempPin = A4;        // LM35 Temperature sensor
const int ledUltrasonic = 13;  // Built-in LED
const int ledTemp = 10;        // External LED for temperature alert

volatile int distance = 0;     
volatile float temperatureC = 0;

void setup() {
  Serial.begin(9600);

  pinMode(sensorPin, INPUT);
  pinMode(ledUltrasonic, OUTPUT);
  pinMode(ledTemp, OUTPUT);

  // Turn on External LED for 5 sec at startup
  digitalWrite(ledTemp, HIGH);
  delay(5000);
  digitalWrite(ledTemp, LOW);

  // Timer1 setup for temperature check every 1 sec
  TCCR1B |= (1 << WGM12) | (1 << CS12) | (1 << CS10); 
  TIMSK1 |= (1 << OCIE1A);  
  OCR1A = 15624; 

  // Enable Pin Change Interrupt on Pin 7 (PCINT23)
  PCICR |= (1 << PCIE2);
  PCMSK2 |= (1 << PCINT23);

  sei(); // Enable global interrupts
}

void loop() {} // Everything is handled by interrupts

// Timer Interrupt: Check Temperature Every 1 Sec
ISR(TIMER1_COMPA_vect) {
  temperatureC = (analogRead(tempPin) * 5.0 / 1023.0 - 0.5) * 100.0;
  Serial.print("Temperature: ");
  Serial.println(temperatureC);

  digitalWrite(ledTemp, temperatureC < 30.0 ? HIGH : LOW);
}

// Pin Change Interrupt: Measure Distance
ISR(PCINT2_vect) {
  pinMode(sensorPin, OUTPUT);
  digitalWrite(sensorPin, LOW);
  delayMicroseconds(2);
  digitalWrite(sensorPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(sensorPin, LOW);
  
  pinMode(sensorPin, INPUT);
  distance = pulseIn(sensorPin, HIGH) * 0.034 / 2;

  Serial.print("Distance: ");
  Serial.println(distance);

  digitalWrite(ledUltrasonic, (distance > 0 && distance <= 10) ? HIGH : LOW);
}
