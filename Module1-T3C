const int sensorPin = 7;   // Ultrasonic sensor SIG pin
const int irSensorPin = A4; // IR sensor connected to Analog pin A4
const int ledUltrasonic = 13;  // Built-in LED
const int ledIR = 10;    // External LED for IR sensor alert

volatile bool interruptTriggered = false;

void IRAM_ATTR handleInterrupt() {
  interruptTriggered = true;
}

void setup() {
  pinMode(sensorPin, OUTPUT);
  pinMode(ledUltrasonic, OUTPUT);
  pinMode(ledIR, OUTPUT);
  Serial.begin(9600);

  // Attach interrupt on pin 2 (example, ensure the correct pin for your board)
  pinMode(2, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(2), handleInterrupt, FALLING);

  // Test External LED (should turn ON for 5 sec on startup)
  digitalWrite(ledIR, HIGH);
  Serial.println("IR LED ON (Startup Test)");
  delay(5000);
  digitalWrite(ledIR, LOW);
}

void loop() {
  if (interruptTriggered) {
    Serial.println("Interrupt Triggered! Emergency Stop.");
    digitalWrite(ledUltrasonic, LOW);
    digitalWrite(ledIR, LOW);
    interruptTriggered = false;
    return;
  }

  // --- Ultrasonic Sensor ---
  pinMode(sensorPin, OUTPUT);
  digitalWrite(sensorPin, LOW);
  delayMicroseconds(2);
  digitalWrite(sensorPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(sensorPin, LOW);
  
  pinMode(sensorPin, INPUT);
  long duration = pulseIn(sensorPin, HIGH);
  int distance = duration * 0.034 / 2; // Convert to cm

  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");

  // Turn on built-in LED if object is within 50 cm
  if (distance > 0 && distance <= 50) {
    digitalWrite(ledUltrasonic, HIGH);
    Serial.println("Ultrasonic LED ON");
  } else {
    digitalWrite(ledUltrasonic, LOW);
  }

  // --- IR Sensor ---
  int irValue = analogRead(irSensorPin);
  Serial.print("IR Sensor Value: ");
  Serial.println(irValue);

  // Assuming IR sensor gives a high value when an object is detected
  if (irValue > 20) {  // Adjust threshold based on IR sensor output
    digitalWrite(ledIR, HIGH);
    Serial.println("IR LED ON");
  } else {
    digitalWrite(ledIR, LOW);
  }

  delay(1000); // Wait 1 second before next reading
}
